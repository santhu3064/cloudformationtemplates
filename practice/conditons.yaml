Parameters:
  EnvironmentType:
    Type: String
    Default: test
    AllowedValues:
      - test
      - preprod
      - prod
    Description: The parameter defines which environmet to craete

Mappings:
  RegionMap:
    us-east-1:
      AMI: "ami-a4c7edb2"
      TestAz: "us-east-1a"
    us-west-1:
      AMI: "ami-6df1e514"
      TestAz: "us-west-1a"
    us-west-2:
      AMI: "ami-327f5352"
      TestAz: "us-west-2a"
    eu-west-1:
      AMI: "ami-d7b9a2b1"
      TestAz: "eu-west-1a"
    sa-east-1:
      AMI: "ami-87dab1eb"
      TestAz: "sa-east-1a"
    ap-southeast-1:
      AMI: "ami-77af2014"
      TestAz: "ap-southeast-1a"
    ap-southeast-2:
      AMI: "ami-10918173"
      TestAz: "ap-southeast-2a"
    ap-northeast-1:
      AMI: "ami-e21cc38c"
      TestAz: "ap-northeast-1a"

Conditions:
  Outputcreation: !Equals [ !Ref EnvironmentType , prod ]

Resources:
  MYEc2instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", AMI ]
      InstanceType: !If [ Outputcreation ,c5.large, t2.micro]
      AvailabilityZone: !FindInMap [ RegionMap, !Ref "AWS::Region", TestAz ]

  MyVolume:
    Type: "AWS::EC2::Volume"
    Condition: Outputcreation
    Properties:
      AvailabilityZone:
        !GetAtt MYEc2instance.AvailabilityZone
      Size: 100

  MountPoint:
    Type: "AWS::EC2::VolumeAttachment"
    Condition: Outputcreation
    Properties:
      Device: /dev/sdh
      InstanceId: !Ref MYEc2instance
      VolumeId: !Ref MyVolume

Outputs:
  Mytestouput:
    Condition: Outputcreation
    Value: !Ref MyVolume
    Description: "Importing the volume for prod"
    Export:
      Name: prodvol
